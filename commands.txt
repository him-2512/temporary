cwd 	//comes to the present working directory
ls 	//lists all the files present in the dir 

git config --global user.name ""
git config --global user.email ""
git config --list

git config user.name
git config user.email


git status // tells us the status of the repo if it is git repo or not
git init // it will make the file hit repo

git add --a // add all the files in the repo to staging area
git add filename.__ // stage the particular file to commit whose name is given

git commit -m "Initial commit "  //This will commit all the files that are in stage state 


git log			// it is a log which stores all the info who has accessed or committed in the repo


rm -rg .git		// deletes the git repo and stops tracking

git clone filename

touch .gitignore 	// Creates a file gitignore in thsi we can write the file name which we want to ignore in git and if we make any changes 		    			in this file it will not be shown in git bash as it is ignored by git 
{
	*.log 		// if we write this in gitignore then all files with extention .log will be ignored
	dir/		//folder named as dir will be ignored
}

git diff		//Compares the working file/dir with stagiging file/dir 

git diff --staged	//Compares the previous commit with current staged 

git commit -a -m ""	//All the files that are already in the staged area once in their lifetime can be commited directly without adding it to staging 				area again and again basically we are skipping the stagging area and commiting directly

git rm filename		//Deletes the file and put this in staged area

git mv filename renamed_filename	//This renames the file and put this command in stag area

git rm --cached filename		//This will not delete the file instead stop tracking the file 

git log -p		//It shows what are diff made in the file everytime somebody commits 

git log -p -n		//It shows what are diff made in the file everytime somebody commits for last n no of commits

git log --stat		//It shows the summary of the log of the git repo 

git log --pretty=oneline	//It shows us every commit in one line 

git log --pretty=short

git log --pretty=full

git log --since=n.days/month/year

git log --pretty=format....



git restore --staged filename	//It unstaged the file given

git checkout -- filename	//It unmodifies the file i.e. it will make the file same as the previous commit by undoing all the changes

git checkout -f		//It unmodifies all the files that are modified 




//////////////////////////////////////////////////	GITHUB	////////////////////////////////////////////////////

git remote add origin gitSSH	//We added a git repo as remote and gib=ven it name origin